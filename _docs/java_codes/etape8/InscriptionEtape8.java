/*
 * InscriptionEtape8.java
 */
package introavecswing.inscription;

import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author pascal
 */
public class InscriptionEtape8 extends javax.swing.JFrame {

    /**
     * Creates new form Inscription
     */
    public InscriptionEtape8() {

        super("Etape 8");
        // Creation des objets d'interface
        initComponents();

        // Initialisation - en periode de test - des zones de saisie
        jPasswordFieldMDP.setText("mdp");
        jLabelMessage.setText("");

        // Positionnement, dimensionnement, ...
        this.setVisible(true);
        //this.setTitle("Inscription (étape 8)");
//        this.setLocation(300, 100);
        this.setSize(700, 500);
        
        this.setLocationRelativeTo(null);

        /*
         * Les boutons radio
         * Rattachement au groupe
         * pour que le RB soient exclusifs
         */
        this.buttonGroupTypes.add(jRadioButtonJoueur);
        this.buttonGroupTypes.add(jRadioButtonArbitre);
        this.buttonGroupTypes.add(jRadioButtonSpectateur);

        /*
         * Initialisation des listes
         */
        // Les jours
        this.jComboBoxJours.addItem("<<jour>>");
        for (int i = 1; i <= 31; i++) {
            this.jComboBoxJours.addItem(i);
        }

        // Les mois
        // Tableau associatif des mois ou pas !!!
        String[] tMois = {"Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"};
        this.jComboBoxMois.addItem("<<mois>>");
//        for (int i = 0; i < tMois.length; i++) {
//            this.jComboBoxMois.addItem(tMois[i]);
//        }
        for (String mois : tMois) {
            this.jComboBoxMois.addItem(mois);
        }

        // Les annees
        // De l'annee en cours a 2000
        Calendar aujourdhui = new GregorianCalendar();
        int liAnneeActuelle = aujourdhui.get(Calendar.YEAR);
//        for (int i = liAnneeActuelle; i >= 2000; i--) {
//            this.jComboBoxAnnees.addItem(i);
//        }
        this.jComboBoxAnnees.addItem("<<année>>");
        int i = liAnneeActuelle;
        while (i >= 2000) {
            this.jComboBoxAnnees.addItem(i);
            i--;
        }



        /*
         * DISCIPLINES
         */
        Discipline discipline = new Discipline();
        String[] tDisciplines = discipline.getDisciplines();
        jListDisciplines.setListData(tDisciplines);



        /*
         * INIT DE TEST
         * SELECTION DES ITEMS DANS LES LISTES
         */
        this.jComboBoxJours.setSelectedIndex(1);
        this.jComboBoxMois.setSelectedIndex(1);
        this.jComboBoxAnnees.setSelectedIndex(1);

        this.jListDisciplines.setSelectedIndex(2);
        
//        this.jRadioButtonJoueur.setSelected(true);        

    } /// Constructeur

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTypes = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPseudo = new javax.swing.JTextField();
        jPasswordFieldMDP = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAge = new javax.swing.JTextField();
        jComboBoxJours = new javax.swing.JComboBox();
        jComboBoxMois = new javax.swing.JComboBox();
        jComboBoxAnnees = new javax.swing.JComboBox();
        jButtonValider = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jButtonAnnuler = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDisciplines = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jRadioButtonJoueur = new javax.swing.JRadioButton();
        jRadioButtonArbitre = new javax.swing.JRadioButton();
        jRadioButtonSpectateur = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldClassement = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pseudo");

        jLabel2.setText("Mot de passe");

        jTextFieldPseudo.setText("Tintin");

        jPasswordFieldMDP.setText("jPasswordField1");

        jLabel3.setText("Age");

        jLabel4.setText("Date d'inscription");

        jTextFieldAge.setText("18");

        jButtonValider.setText("Valider");
        jButtonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jListDisciplines);

        jLabel5.setText("Discipline");

        jRadioButtonJoueur.setText("Joueur");

        jRadioButtonArbitre.setText("Arbitre");

        jRadioButtonSpectateur.setText("Spectateur");

        jLabel6.setText("Classement");

        jTextFieldClassement.setText("2");

        jLabel7.setText("Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordFieldMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(jButtonAnnuler)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonValider))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxJours, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxMois, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxAnnees, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(41, 41, 41)
                                .addComponent(jTextFieldClassement, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jRadioButtonJoueur)
                                    .addComponent(jRadioButtonArbitre)
                                    .addComponent(jRadioButtonSpectateur)))))
                    .addComponent(jLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordFieldMDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxJours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxMois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAnnees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonValider)
                            .addComponent(jButtonAnnuler)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonJoueur)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonArbitre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonSpectateur)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldClassement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMessage)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        // CLS
        jTextFieldPseudo.setText("");
        jTextFieldAge.setText("");
        jPasswordFieldMDP.setText("");
        jComboBoxJours.setSelectedIndex(0);
        jComboBoxMois.setSelectedIndex(0);
        jComboBoxAnnees.setSelectedIndex(0);

        jLabelMessage.setText("Vous avez annulé l'opération!");
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderActionPerformed
        // LE IF PRINCIPALEMENT

        /*
         * DECLARATIONS DES VARIABLES
         */
        String lsPseudo = "";
        int liLongueurPseudo = 0;
        char[] tCharPassword;
        String lsMDP = "";
        int liLongueurMDP = 0;
        String lsAge = "";
        int liAge = 0;
        int liLongueurAge = 0;
        char carAge;
        boolean lbAge0K = true;

        String lsJourInscription = "";
        String lsMoisInscription = "";
        String lsAnneeInscription = "";
        StringBuilder lsbDateInscription = new StringBuilder("");

        boolean lb0K = true;

        // Declaration de la chaine resultante
        StringBuilder lsbMessage = new StringBuilder();


        /*
         * DEBUT DU CODE
         */

        // Du HTML pour avoir des passages a la ligne
        // dans un label
        lsbMessage.append("<html>");

        /*
         * Test de la saisie du pseudo
         * 2 caracteres mini
         */
        lsPseudo = this.jTextFieldPseudo.getText().toString().trim();
        liLongueurPseudo = lsPseudo.length();
        if (liLongueurPseudo >= 2) {
            lsbMessage.append("Pseudo OK<br>");
        } else {
            lsbMessage.append("Pseudo trop court<br>");
            lb0K = false;
        }

        /*
         * Test du MDP
         */
        // getText() pour un jPasswordField est obsolete
        //lsMDP = this.jPasswordFieldMDP.getText().trim();
        tCharPassword = this.jPasswordFieldMDP.getPassword();
        for (int i = 0; i < tCharPassword.length; i++) {
            lsMDP += tCharPassword[i];
        }
        liLongueurMDP = lsMDP.length();
        if (liLongueurMDP >= 3) {
            lsbMessage.append("MDP OK<br>");
        } else {
            lsbMessage.append("MDP trop court<br>");
            lb0K = false;
        }

        /*
         * Test de l'age
         */

        /*
         * Recuperation la saisie de l'age
         * Nettoyage de la saisie
         */
        lsAge = this.jTextFieldAge.getText().trim();

        // SI saisie age
        if (!lsAge.equals("")) {
            // SI age ne contient que des chiffres
            // Test pour savoir s'il n'y a que des chiffres
            liLongueurAge = lsAge.length();
            for (int i = 0; i < liLongueurAge; i++) {
                carAge = lsAge.charAt(i);
                if (!Character.isDigit(carAge)) {
                    lbAge0K = false;
                }
            }
            if (lbAge0K) {
                // Age transforme en numerique
                liAge = Integer.parseInt(lsAge);

                // Test de la tranche age
                if (liAge < 18 || liAge > 77) {
                    lsbMessage.append("Trop jeune ou trop vieux<br>");
                    lb0K = false;
                } else {
                    lsbMessage.append("Age OK<br>");
                }
            }
        } // SI saisie age vide
        else {
            lsbMessage.append("Vous devez saisir l'âge !<br>");
            lb0K = false;
        }



        /*
         * Recuperation de la date d'inscription
         */
        lsJourInscription = this.jComboBoxJours.getSelectedItem().toString();
        lsMoisInscription = Integer.toString(this.jComboBoxMois.getSelectedIndex());
        lsAnneeInscription = this.jComboBoxAnnees.getSelectedItem().toString();

        if (lsJourInscription.equals("<<jour>>") || lsMoisInscription.equals("0") || lsAnneeInscription.equals("<<année>>")) {
            lsbMessage.append("Date incorrecte !<br>");
            lb0K = false;
        } else {

            // Facultatif : ajout d'un 0
            if (lsJourInscription.length() == 1) {
                lsJourInscription = "0" + lsJourInscription;
            }

            if (lsMoisInscription.length() == 1) {
                lsMoisInscription = "0" + lsMoisInscription;
            }
            /// Facultatif

            lsbDateInscription.append(lsAnneeInscription);
            lsbDateInscription.append("-");
            lsbDateInscription.append(lsMoisInscription);
            lsbDateInscription.append("-");
            lsbDateInscription.append(lsJourInscription);

            lsbMessage.append(lsbDateInscription);
            lsbMessage.append("<br>");
        }



        /*
         * Creation de l'objet Inscrit
         */
        if (lb0K) {
            Inscrit inscrit = new Inscrit(1, lsPseudo, lsMDP, liAge, lsbDateInscription.toString());
//            lsbMessage.append(inscrit);
//            lsbMessage.append("<br>");
        }

        /*
         * Creation de l'objet Joueur
         */
        
        // SI AUCUN TYPE SELECTIONNE
        if(!this.jRadioButtonJoueur.isSelected() && !this.jRadioButtonArbitre.isSelected() && !this.jRadioButtonSpectateur.isSelected()) {
            lb0K = false;
            lsbMessage.append("Vous devez sélectionner un type<br>");
        }
        
        // SI DISCIPLINE SELECTIONNEE
        if (this.jListDisciplines.getSelectedIndex() == -1) {
            lb0K = false;
            lsbMessage.append("Vous devez sélectionner une discipline<br>");
        }

        // SI CLASSEMENT REMPLI
        if (this.jTextFieldClassement.getText().trim().equals("")) {
            lb0K = false;
            lsbMessage.append("Vous devez saisir un classement<br>");
        }

        // SI JOUEUR SELECTIONNE
        if (lb0K && this.jRadioButtonJoueur.isSelected()) {
            int liClassement = Integer.parseInt(this.jTextFieldClassement.getText().trim());
            
            Discipline discipline = new Discipline();
            discipline.setIdDiscipline(this.jListDisciplines.getSelectedIndex());
            discipline.setNomDiscipline(discipline.getNomDiscipline(this.jListDisciplines.getSelectedIndex()));

            Joueur joueur = new Joueur(1, lsPseudo, lsMDP, liAge, lsbDateInscription.toString(), liClassement, discipline);
            //Inscrit inscrit = new Inscrit(1, lsPseudo, lsMDP, liAge, lsbDateInscription.toString());
            lsbMessage.append(joueur);
            lsbMessage.append("<br>");
        }


        // Fin de la composition du message
        lsbMessage.append("</html>");

        // Affichage
        jLabelMessage.setText(lsbMessage.toString());
    }//GEN-LAST:event_jButtonValiderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InscriptionEtape8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InscriptionEtape8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InscriptionEtape8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InscriptionEtape8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InscriptionEtape8().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTypes;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonValider;
    private javax.swing.JComboBox jComboBoxAnnees;
    private javax.swing.JComboBox jComboBoxJours;
    private javax.swing.JComboBox jComboBoxMois;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JList jListDisciplines;
    private javax.swing.JPasswordField jPasswordFieldMDP;
    private javax.swing.JRadioButton jRadioButtonArbitre;
    private javax.swing.JRadioButton jRadioButtonJoueur;
    private javax.swing.JRadioButton jRadioButtonSpectateur;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldClassement;
    private javax.swing.JTextField jTextFieldPseudo;
    // End of variables declaration//GEN-END:variables
}
